/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   files-payload-editor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {ValidatableMixin} from '@anypoint-web-components/validatable-mixin/validatable-mixin.js';

declare namespace UiElements {

  /**
   * `<files-payload-editor>` A request body editor to add files as a payload.
   *
   * With this element the user can select single file that will be used in the request body.
   *
   * The element can be used in forms when `iron-form` is used. It contains validation methods to
   * validate user input.
   *
   * ### Example
   *
   * ```html
   * <files-payload-editor></files-payload-editor>
   * ```
   */
  class FilesPayloadEditor extends
    ValidatableMixin(
    Object) {
    readonly hasFile: Boolean|null;

    /**
     * Value produced by this control.
     */
    value: Blob|null;
    onchange: Function|null;

    /**
     * Computed value, true if the control has files.
     */
    _hasFile: boolean|null|undefined;

    /**
     * If set the value will be base64 encoded.
     */
    base64Encode: boolean|null|undefined;

    /**
     * Selected file name
     */
    fileName: string|null|undefined;

    /**
     * Selected file size,
     */
    fileSize: number|null|undefined;

    /**
     * Icon prefix from the svg icon set. This can be used to replace the set
     * without changing the icon.
     *
     * Defaults to `arc`.
     */
    iconPrefix: string|null|undefined;
    render(): any;

    /**
     * Returns a reference to the input element.
     */
    _getInput(): HTMLElement|null;
    _valueChnaged(value: any): void;

    /**
     * Updated `fileName` and `fileSize` from a base64 encoded string value
     *
     * @param value File as base64 string
     */
    _updateFileMeta(value: String|null): void;

    /**
     * Dispatches `content-type-changed` custom event change when a
     * file is selected.
     *
     * @param ct File content type
     */
    _informContentType(ct: String|null): void;

    /**
     * A handler to choose file button click.
     * This function will find a proper input[type="file"] and programatically click on it to open
     * file dialog.
     */
    _selectFile(): void;

    /**
     * A handler to file change event for input[type="file"].
     * This will update files array for corresponding `this.value` array object.
     *
     * @param e Input change event
     */
    _fileObjectChanged(e: Event|null): void;

    /**
     * Sets the `value` depending on `base64Encode` option.
     *
     * @param file A file to set as a value.
     */
    _setFileValue(file: Blob|null): void;

    /**
     * Overides ValidatableMixin
     */
    _getValidity(): any;
    _computeHasFile(file: any): any;

    /**
     * Removed added file from the editor.
     */
    removeFile(): void;

    /**
     * The element keeps in memory last selected file so it can be restored.
     * This removes reference to the object so it can be GSd.
     */
    clearCache(): void;
    _computeIcon(name: any): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "files-payload-editor": UiElements.FilesPayloadEditor;
  }
}
